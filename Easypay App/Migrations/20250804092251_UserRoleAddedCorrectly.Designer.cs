// <auto-generated />
using System;
using Easypay_App.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Easypay_App.Migrations
{
    [DbContext(typeof(PayrollContext))]
    [Migration("20250804092251_UserRoleAddedCorrectly")]
    partial class UserRoleAddedCorrectly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Easypay_App.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TotalHours")
                        .HasColumnType("time");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Attendance");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Easypay_App.Models.AttendanceStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Attendance_Status_Master");

                    b.ToTable("AttendanceStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Present"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Absent"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Leave"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Half-Day"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "Work From Home"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "Holiday"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.AuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AuditTrail");

                    b.HasIndex("ActionId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("Easypay_App.Models.AuditTrailActionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Audit_Trail_Action_Master");

                    b.ToTable("AuditTrailActionMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "Create"
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Update"
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "Delete"
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "Login"
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "Logout"
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "Apply Leave"
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Approve Leave"
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "Reject Leave"
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "Run Payroll"
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "Mark Attendance"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EmployeeContribution")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("EmployerContribution")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_BenefitEnrollment");

                    b.HasIndex("BenefitId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StatusId");

                    b.ToTable("BenefitEnrollments");
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BenefitDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployerContribution")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTaxable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Benefit_Master");

                    b.ToTable("BenefitMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitDescription = "",
                            BenefitName = "House Rent Allowance (HRA)",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsEmployerContribution = false,
                            IsTaxable = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BenefitDescription = "",
                            BenefitName = "Transport Allowance",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsEmployerContribution = false,
                            IsTaxable = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BenefitDescription = "",
                            BenefitName = "Performance Bonus",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsEmployerContribution = false,
                            IsTaxable = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BenefitDescription = "",
                            BenefitName = "Medical Reimbursement",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsEmployerContribution = false,
                            IsTaxable = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BenefitDescription = "",
                            BenefitName = "Provident Fund (PF)",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsEmployerContribution = false,
                            IsTaxable = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Benefit_Status_Master");

                    b.ToTable("BenefitStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.DepartmentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK_Department_Master");

                    b.ToTable("DepartmentMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentDescription = "",
                            DepartmentName = "Human Resources",
                            IsActive = false
                        },
                        new
                        {
                            Id = 2,
                            DepartmentDescription = "",
                            DepartmentName = "Finance",
                            IsActive = false
                        },
                        new
                        {
                            Id = 3,
                            DepartmentDescription = "",
                            DepartmentName = "Engineering",
                            IsActive = false
                        },
                        new
                        {
                            Id = 4,
                            DepartmentDescription = "",
                            DepartmentName = "Marketing",
                            IsActive = false
                        },
                        new
                        {
                            Id = 5,
                            DepartmentDescription = "",
                            DepartmentName = "Sales",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportingManagerId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Employee");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ReportingManagerId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("UserRoleMasterId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Easypay_App.Models.EmployeeStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Employee_Status_Master");

                    b.ToTable("EmployeeStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Active"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "On Leave"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Terminated"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Resigned"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_LeaveRequest");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Leave_Status_Master");

                    b.ToTable("LeaveStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveTypeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LeaveDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Leave_Type_Master");

                    b.ToTable("LeaveTypeMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LeaveDescription = "",
                            LeaveTypeName = "Sick Leave"
                        },
                        new
                        {
                            Id = 2,
                            LeaveDescription = "",
                            LeaveTypeName = "Casual Leave"
                        },
                        new
                        {
                            Id = 3,
                            LeaveDescription = "",
                            LeaveTypeName = "Earned Leave"
                        },
                        new
                        {
                            Id = 4,
                            LeaveDescription = "",
                            LeaveTypeName = "Maternity Leave"
                        },
                        new
                        {
                            Id = 5,
                            LeaveDescription = "",
                            LeaveTypeName = "Paternity Leave"
                        },
                        new
                        {
                            Id = 6,
                            LeaveDescription = "",
                            LeaveTypeName = "Compensatory Off"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationChannelMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Notification_Channel_Master");

                    b.ToTable("NotificationChannelMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SMS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "In-App"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_NotificationLog");

                    b.HasIndex("ChannelId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationLogs");
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Notification_Status_Master");

                    b.ToTable("NotificationStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Sent"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Failed"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Allowances")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BasicPay")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deductions")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetPay")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PaidBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Payroll");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaidBy");

                    b.HasIndex("PolicyId");

                    b.HasIndex("StatusId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ComponentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PayrollId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_PayrollDetail");

                    b.HasIndex("PayrollId");

                    b.HasIndex("TaxId");

                    b.ToTable("PayrollDetails");
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollPolicyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasicPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EmployeePercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("EmployerPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("GratuityPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("HRAPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MedicalPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpecialPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TaxRegime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TravelPercent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id")
                        .HasName("PK_Payroll_Policy_Master");

                    b.ToTable("PayrollPolicyMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasicPercent = 40m,
                            EffectiveFrom = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2026, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeePercent = 12m,
                            EmployerPercent = 12m,
                            GratuityPercent = 4.81m,
                            HRAPercent = 20m,
                            IsActive = true,
                            MedicalPercent = 5m,
                            PolicyName = "Default Policy FY25",
                            SpecialPercent = 10m,
                            TaxRegime = "New",
                            TravelPercent = 5m
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Payroll_Status_Master");

                    b.ToTable("PayrollStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Processed"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Approved"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Rejected"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.RoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Role_Master");

                    b.ToTable("RoleMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            RoleDescription = "",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            RoleDescription = "",
                            RoleName = "HR Manager"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            RoleDescription = "",
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.TaxMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("MaxIncome")
                        .HasColumnType("real");

                    b.Property<float>("MinIncome")
                        .HasColumnType("real");

                    b.Property<float>("TaxAmount")
                        .HasColumnType("real");

                    b.Property<decimal>("TaxRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id")
                        .HasName("PK_Tax_Master");

                    b.ToTable("TaxMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxIncome = 250000f,
                            MinIncome = 0f,
                            TaxAmount = 0f,
                            TaxRate = 0.00m
                        },
                        new
                        {
                            Id = 2,
                            MaxIncome = 500000f,
                            MinIncome = 250001f,
                            TaxAmount = 12500f,
                            TaxRate = 0.05m
                        },
                        new
                        {
                            Id = 3,
                            MaxIncome = 1000000f,
                            MinIncome = 500001f,
                            TaxAmount = 100000f,
                            TaxRate = 0.20m
                        },
                        new
                        {
                            Id = 4,
                            MaxIncome = 9999999f,
                            MinIncome = 1000001f,
                            TaxAmount = 300000f,
                            TaxRate = 0.30m
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_UserAccount");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Easypay_App.Models.UserRoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UserRoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_User_Role_Master");

                    b.ToTable("UserRoleMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            UserRoleDescription = "System Administrator",
                            UserRoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            UserRoleDescription = "Manages Payroll and Leaves",
                            UserRoleName = "HR Manager"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            UserRoleDescription = "General Employee User",
                            UserRoleName = "Employee"
                        });
                });

            modelBuilder.Entity("Easypay_App.Models.Attendance", b =>
                {
                    b.HasOne("Easypay_App.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Attendance_Employee");

                    b.HasOne("Easypay_App.Models.AttendanceStatusMaster", "Status")
                        .WithMany("Attendances")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Attendance_AttendanceStatus");

                    b.Navigation("Employee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Easypay_App.Models.AuditTrail", b =>
                {
                    b.HasOne("Easypay_App.Models.AuditTrailActionMaster", "Action")
                        .WithMany("AuditTrails")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AuditTrail_ActionMaster");

                    b.HasOne("Easypay_App.Models.UserAccount", "User")
                        .WithMany("AuditTrails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AuditTrail_UserAccount");

                    b.Navigation("Action");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitEnrollment", b =>
                {
                    b.HasOne("Easypay_App.Models.BenefitMaster", "Benefit")
                        .WithMany("BenefitEnrollments")
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_BenefitEnrollment_BenefitMaster");

                    b.HasOne("Easypay_App.Models.Employee", "Employee")
                        .WithMany("BenefitEnrollments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_BenefitEnrollment_Employee");

                    b.HasOne("Easypay_App.Models.BenefitStatusMaster", "Status")
                        .WithMany("BenefitEnrollments")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_BenefitEnrollment_StatusMaster");

                    b.Navigation("Benefit");

                    b.Navigation("Employee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Easypay_App.Models.Employee", b =>
                {
                    b.HasOne("Easypay_App.Models.DepartmentMaster", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Department");

                    b.HasOne("Easypay_App.Models.Employee", "ReportingManager")
                        .WithMany()
                        .HasForeignKey("ReportingManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Employee_ReportingManager");

                    b.HasOne("Easypay_App.Models.RoleMaster", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Role");

                    b.HasOne("Easypay_App.Models.EmployeeStatusMaster", "Status")
                        .WithMany("Employees")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_EmployeeStatus");

                    b.HasOne("Easypay_App.Models.UserRoleMaster", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_UserRole");

                    b.HasOne("Easypay_App.Models.UserRoleMaster", null)
                        .WithMany("Employees")
                        .HasForeignKey("UserRoleMasterId");

                    b.Navigation("Department");

                    b.Navigation("ReportingManager");

                    b.Navigation("Role");

                    b.Navigation("Status");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveRequest", b =>
                {
                    b.HasOne("Easypay_App.Models.Employee", "ApprovedManager")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_LeaveRequest_ApprovedBy");

                    b.HasOne("Easypay_App.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_Employee");

                    b.HasOne("Easypay_App.Models.LeaveTypeMaster", "LeaveType")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_LeaveType");

                    b.HasOne("Easypay_App.Models.LeaveStatusMaster", "Status")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_Status");

                    b.Navigation("ApprovedManager");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationLog", b =>
                {
                    b.HasOne("Easypay_App.Models.NotificationChannelMaster", "Channel")
                        .WithMany("NotificationLogs")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_NotificationLog_Channel");

                    b.HasOne("Easypay_App.Models.NotificationStatusMaster", "Status")
                        .WithMany("NotificationLogs")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_NotificationLog_Status");

                    b.HasOne("Easypay_App.Models.UserAccount", "User")
                        .WithMany("NotificationLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NotificationLog_UserAccount");

                    b.Navigation("Channel");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Easypay_App.Models.Payroll", b =>
                {
                    b.HasOne("Easypay_App.Models.Employee", "ApprovedById")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Payroll_ApprovedBy");

                    b.HasOne("Easypay_App.Models.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Payroll_Employee");

                    b.HasOne("Easypay_App.Models.UserRoleMaster", "PaidById")
                        .WithMany()
                        .HasForeignKey("PaidBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Payroll_PaidBy");

                    b.HasOne("Easypay_App.Models.PayrollPolicyMaster", "Policy")
                        .WithMany("Payrolls")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Payroll_Policy");

                    b.HasOne("Easypay_App.Models.PayrollStatusMaster", "Status")
                        .WithMany("Payrolls")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Payroll_Status");

                    b.Navigation("ApprovedById");

                    b.Navigation("Employee");

                    b.Navigation("PaidById");

                    b.Navigation("Policy");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollDetail", b =>
                {
                    b.HasOne("Easypay_App.Models.Payroll", "Payroll")
                        .WithMany("PayrollDetails")
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PayrollDetail_Payroll");

                    b.HasOne("Easypay_App.Models.TaxMaster", "Tax")
                        .WithMany("PayrollDetails")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PayrollDetail_TaxMaster");

                    b.Navigation("Payroll");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Easypay_App.Models.UserAccount", b =>
                {
                    b.HasOne("Easypay_App.Models.Employee", "Employee")
                        .WithOne("UserAccount")
                        .HasForeignKey("Easypay_App.Models.UserAccount", "EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UserAccount_Employee");

                    b.HasOne("Easypay_App.Models.UserRoleMaster", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UserAccount_UserRole");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Easypay_App.Models.AttendanceStatusMaster", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("Easypay_App.Models.AuditTrailActionMaster", b =>
                {
                    b.Navigation("AuditTrails");
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitMaster", b =>
                {
                    b.Navigation("BenefitEnrollments");
                });

            modelBuilder.Entity("Easypay_App.Models.BenefitStatusMaster", b =>
                {
                    b.Navigation("BenefitEnrollments");
                });

            modelBuilder.Entity("Easypay_App.Models.DepartmentMaster", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Easypay_App.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("BenefitEnrollments");

                    b.Navigation("Payrolls");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Easypay_App.Models.EmployeeStatusMaster", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveStatusMaster", b =>
                {
                    b.Navigation("LeaveRequests");
                });

            modelBuilder.Entity("Easypay_App.Models.LeaveTypeMaster", b =>
                {
                    b.Navigation("LeaveRequests");
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationChannelMaster", b =>
                {
                    b.Navigation("NotificationLogs");
                });

            modelBuilder.Entity("Easypay_App.Models.NotificationStatusMaster", b =>
                {
                    b.Navigation("NotificationLogs");
                });

            modelBuilder.Entity("Easypay_App.Models.Payroll", b =>
                {
                    b.Navigation("PayrollDetails");
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollPolicyMaster", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("Easypay_App.Models.PayrollStatusMaster", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("Easypay_App.Models.RoleMaster", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Easypay_App.Models.TaxMaster", b =>
                {
                    b.Navigation("PayrollDetails");
                });

            modelBuilder.Entity("Easypay_App.Models.UserAccount", b =>
                {
                    b.Navigation("AuditTrails");

                    b.Navigation("NotificationLogs");
                });

            modelBuilder.Entity("Easypay_App.Models.UserRoleMaster", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
